{"ast":null,"code":"var _jsxFileName = \"/Users/deepikasubramanian/formic-form/src/FomikComponent.js\";\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      name: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feedback\",\n      children: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyForm;\nconst MyEnhancedForm = withFormik({\n  mapPropsToValues: () => ({\n    name: ''\n  }),\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'BasicForm'\n})(MyForm);\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/Users/deepikasubramanian/formic-form/src/FomikComponent.js"],"names":["React","withFormik","MyForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","name","MyEnhancedForm","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,QAAzB;;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEF,YAFZ;AAGE,MAAA,MAAM,EAAEC,UAHV;AAIE,MAAA,KAAK,EAAEJ,MAAM,CAACM,IAJhB;AAKE,MAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,YADF,EAQGJ,MAAM,CAACI,IAAP,IAAeL,OAAO,CAACK,IAAvB,iBAA+B;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBAAoBJ,MAAM,CAACI;AAA3B;AAAA;AAAA;AAAA;AAAA,YARlC,eASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtBD;;KAAMR,M;AAwBN,MAAMS,cAAc,GAAGV,UAAU,CAAC;AAChCW,EAAAA,gBAAgB,EAAE,OAAO;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAAP,CADc;AAGhC;AACAG,EAAAA,QAAQ,EAAET,MAAM,IAAI;AAClB,UAAME,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACF,MAAM,CAACM,IAAZ,EAAkB;AAChBJ,MAAAA,MAAM,CAACI,IAAP,GAAc,UAAd;AACD;;AAED,WAAOJ,MAAP;AACD,GAZ+B;AAchCG,EAAAA,YAAY,EAAE,CAACL,MAAD,WAA+B;AAAA,QAAtB;AAAEU,MAAAA;AAAF,KAAsB;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAed,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAU,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAnB+B;AAqBhCK,EAAAA,WAAW,EAAE;AArBmB,CAAD,CAAV,CAsBpBjB,MAtBoB,CAAvB;AAuBA,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport {withFormik} from 'formik'\n\n\nconst MyForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.name}\n        name=\"name\"\n      />\n      {errors.name && touched.name && <div id=\"feedback\">{errors.name}</div>}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nconst MyEnhancedForm = withFormik({\n  mapPropsToValues: () => ({ name: '' }),\n\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n\n    return errors;\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n\n  displayName: 'BasicForm',\n})(MyForm);\nexport default MyForm"]},"metadata":{},"sourceType":"module"}